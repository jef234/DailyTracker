"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/daily-tracker",{

/***/ "./src/lib/db.js":
/*!***********************!*\
  !*** ./src/lib/db.js ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addJiraEntry: function() { return /* binding */ addJiraEntry; },\n/* harmony export */   deleteJiraEntry: function() { return /* binding */ deleteJiraEntry; },\n/* harmony export */   getJiraEntries: function() { return /* binding */ getJiraEntries; },\n/* harmony export */   getUniqueJiraEntries: function() { return /* binding */ getUniqueJiraEntries; }\n/* harmony export */ });\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabase */ \"./src/lib/supabase.js\");\n\nconst addJiraEntry = async (jiraNumber, jiraTitle, logMessage, jiraStatus, userId, date)=>{\n    try {\n        const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"jira_entries\").insert([\n            {\n                jira_number: jiraNumber,\n                jira_title: jiraTitle,\n                log_message: logMessage,\n                jira_status: jiraStatus,\n                user_id: userId,\n                date: date\n            }\n        ]).select();\n        if (error) throw error;\n        return {\n            data,\n            error: null\n        };\n    } catch (error) {\n        console.error(\"Error adding JIRA entry:\", error);\n        return {\n            data: null,\n            error\n        };\n    }\n};\nconst getJiraEntries = async (userId)=>{\n    try {\n        const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"jira_entries\").select(\"*\").eq(\"user_id\", userId).order(\"created_at\", {\n            ascending: false\n        });\n        if (error) throw error;\n        return {\n            data,\n            error: null\n        };\n    } catch (error) {\n        console.error(\"Error fetching JIRA entries:\", error);\n        return {\n            data: null,\n            error\n        };\n    }\n};\nconst getUniqueJiraEntries = async (userId)=>{\n    try {\n        const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"jira_entries\").select(\"jira_number, jira_title, jira_status\").eq(\"user_id\", userId).neq(\"jira_status\", \"Done\").order(\"created_at\", {\n            ascending: false\n        });\n        if (error) throw error;\n        // Get unique entries based on jira_number\n        const uniqueEntries = data.reduce((acc, current)=>{\n            const exists = acc.find((item)=>item.jira_number === current.jira_number);\n            if (!exists) {\n                acc.push(current);\n            }\n            return acc;\n        }, []);\n        return {\n            data: uniqueEntries,\n            error: null\n        };\n    } catch (error) {\n        console.error(\"Error fetching unique JIRA entries:\", error);\n        return {\n            data: null,\n            error\n        };\n    }\n};\nconst deleteJiraEntry = async (id, userId)=>{\n    try {\n        const { error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"jira_entries\").delete().eq(\"id\", id).eq(\"user_id\", userId);\n        if (error) throw error;\n        return {\n            error: null\n        };\n    } catch (error) {\n        console.error(\"Error deleting JIRA entry:\", error);\n        return {\n            error\n        };\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGliL2RiLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXNDO0FBRS9CLE1BQU1DLGVBQWUsT0FBT0MsWUFBWUMsV0FBV0MsWUFBWUMsWUFBWUMsUUFBUUM7SUFDeEYsSUFBSTtRQUNGLE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxLQUFLLEVBQUUsR0FBRyxNQUFNVCwrQ0FBUUEsQ0FDbkNVLElBQUksQ0FBQyxnQkFDTEMsTUFBTSxDQUFDO1lBQ047Z0JBQ0VDLGFBQWFWO2dCQUNiVyxZQUFZVjtnQkFDWlcsYUFBYVY7Z0JBQ2JXLGFBQWFWO2dCQUNiVyxTQUFTVjtnQkFDVEMsTUFBTUE7WUFDUjtTQUNELEVBQ0FVLE1BQU07UUFFVCxJQUFJUixPQUFPLE1BQU1BO1FBQ2pCLE9BQU87WUFBRUQ7WUFBTUMsT0FBTztRQUFLO0lBQzdCLEVBQUUsT0FBT0EsT0FBTztRQUNkUyxRQUFRVCxLQUFLLENBQUMsNEJBQTRCQTtRQUMxQyxPQUFPO1lBQUVELE1BQU07WUFBTUM7UUFBTTtJQUM3QjtBQUNGLEVBQUU7QUFFSyxNQUFNVSxpQkFBaUIsT0FBT2I7SUFDbkMsSUFBSTtRQUNGLE1BQU0sRUFBRUUsSUFBSSxFQUFFQyxLQUFLLEVBQUUsR0FBRyxNQUFNVCwrQ0FBUUEsQ0FDbkNVLElBQUksQ0FBQyxnQkFDTE8sTUFBTSxDQUFDLEtBQ1BHLEVBQUUsQ0FBQyxXQUFXZCxRQUNkZSxLQUFLLENBQUMsY0FBYztZQUFFQyxXQUFXO1FBQU07UUFFMUMsSUFBSWIsT0FBTyxNQUFNQTtRQUNqQixPQUFPO1lBQUVEO1lBQU1DLE9BQU87UUFBSztJQUM3QixFQUFFLE9BQU9BLE9BQU87UUFDZFMsUUFBUVQsS0FBSyxDQUFDLGdDQUFnQ0E7UUFDOUMsT0FBTztZQUFFRCxNQUFNO1lBQU1DO1FBQU07SUFDN0I7QUFDRixFQUFFO0FBRUssTUFBTWMsdUJBQXVCLE9BQU9qQjtJQUN6QyxJQUFJO1FBQ0YsTUFBTSxFQUFFRSxJQUFJLEVBQUVDLEtBQUssRUFBRSxHQUFHLE1BQU1ULCtDQUFRQSxDQUNuQ1UsSUFBSSxDQUFDLGdCQUNMTyxNQUFNLENBQUMsd0NBQ1BHLEVBQUUsQ0FBQyxXQUFXZCxRQUNka0IsR0FBRyxDQUFDLGVBQWUsUUFDbkJILEtBQUssQ0FBQyxjQUFjO1lBQUVDLFdBQVc7UUFBTTtRQUUxQyxJQUFJYixPQUFPLE1BQU1BO1FBRWpCLDBDQUEwQztRQUMxQyxNQUFNZ0IsZ0JBQWdCakIsS0FBS2tCLE1BQU0sQ0FBQyxDQUFDQyxLQUFLQztZQUN0QyxNQUFNQyxTQUFTRixJQUFJRyxJQUFJLENBQUNDLENBQUFBLE9BQVFBLEtBQUtuQixXQUFXLEtBQUtnQixRQUFRaEIsV0FBVztZQUN4RSxJQUFJLENBQUNpQixRQUFRO2dCQUNYRixJQUFJSyxJQUFJLENBQUNKO1lBQ1g7WUFDQSxPQUFPRDtRQUNULEdBQUcsRUFBRTtRQUVMLE9BQU87WUFBRW5CLE1BQU1pQjtZQUFlaEIsT0FBTztRQUFLO0lBQzVDLEVBQUUsT0FBT0EsT0FBTztRQUNkUyxRQUFRVCxLQUFLLENBQUMsdUNBQXVDQTtRQUNyRCxPQUFPO1lBQUVELE1BQU07WUFBTUM7UUFBTTtJQUM3QjtBQUNGLEVBQUU7QUFFSyxNQUFNd0Isa0JBQWtCLE9BQU9DLElBQUk1QjtJQUN4QyxJQUFJO1FBQ0YsTUFBTSxFQUFFRyxLQUFLLEVBQUUsR0FBRyxNQUFNVCwrQ0FBUUEsQ0FDN0JVLElBQUksQ0FBQyxnQkFDTHlCLE1BQU0sR0FDTmYsRUFBRSxDQUFDLE1BQU1jLElBQ1RkLEVBQUUsQ0FBQyxXQUFXZDtRQUVqQixJQUFJRyxPQUFPLE1BQU1BO1FBQ2pCLE9BQU87WUFBRUEsT0FBTztRQUFLO0lBQ3ZCLEVBQUUsT0FBT0EsT0FBTztRQUNkUyxRQUFRVCxLQUFLLENBQUMsOEJBQThCQTtRQUM1QyxPQUFPO1lBQUVBO1FBQU07SUFDakI7QUFDRixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9saWIvZGIuanM/N2Y5YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdXBhYmFzZSB9IGZyb20gJy4vc3VwYWJhc2UnO1xyXG5cclxuZXhwb3J0IGNvbnN0IGFkZEppcmFFbnRyeSA9IGFzeW5jIChqaXJhTnVtYmVyLCBqaXJhVGl0bGUsIGxvZ01lc3NhZ2UsIGppcmFTdGF0dXMsIHVzZXJJZCwgZGF0ZSkgPT4ge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxyXG4gICAgICAuZnJvbSgnamlyYV9lbnRyaWVzJylcclxuICAgICAgLmluc2VydChbXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgamlyYV9udW1iZXI6IGppcmFOdW1iZXIsXHJcbiAgICAgICAgICBqaXJhX3RpdGxlOiBqaXJhVGl0bGUsXHJcbiAgICAgICAgICBsb2dfbWVzc2FnZTogbG9nTWVzc2FnZSxcclxuICAgICAgICAgIGppcmFfc3RhdHVzOiBqaXJhU3RhdHVzLFxyXG4gICAgICAgICAgdXNlcl9pZDogdXNlcklkLFxyXG4gICAgICAgICAgZGF0ZTogZGF0ZVxyXG4gICAgICAgIH0sXHJcbiAgICAgIF0pXHJcbiAgICAgIC5zZWxlY3QoKTtcclxuXHJcbiAgICBpZiAoZXJyb3IpIHRocm93IGVycm9yO1xyXG4gICAgcmV0dXJuIHsgZGF0YSwgZXJyb3I6IG51bGwgfTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgYWRkaW5nIEpJUkEgZW50cnk6JywgZXJyb3IpO1xyXG4gICAgcmV0dXJuIHsgZGF0YTogbnVsbCwgZXJyb3IgfTtcclxuICB9XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0SmlyYUVudHJpZXMgPSBhc3luYyAodXNlcklkKSA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXHJcbiAgICAgIC5mcm9tKCdqaXJhX2VudHJpZXMnKVxyXG4gICAgICAuc2VsZWN0KCcqJylcclxuICAgICAgLmVxKCd1c2VyX2lkJywgdXNlcklkKVxyXG4gICAgICAub3JkZXIoJ2NyZWF0ZWRfYXQnLCB7IGFzY2VuZGluZzogZmFsc2UgfSk7XHJcblxyXG4gICAgaWYgKGVycm9yKSB0aHJvdyBlcnJvcjtcclxuICAgIHJldHVybiB7IGRhdGEsIGVycm9yOiBudWxsIH07XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIEpJUkEgZW50cmllczonLCBlcnJvcik7XHJcbiAgICByZXR1cm4geyBkYXRhOiBudWxsLCBlcnJvciB9O1xyXG4gIH1cclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBnZXRVbmlxdWVKaXJhRW50cmllcyA9IGFzeW5jICh1c2VySWQpID0+IHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcclxuICAgICAgLmZyb20oJ2ppcmFfZW50cmllcycpXHJcbiAgICAgIC5zZWxlY3QoJ2ppcmFfbnVtYmVyLCBqaXJhX3RpdGxlLCBqaXJhX3N0YXR1cycpXHJcbiAgICAgIC5lcSgndXNlcl9pZCcsIHVzZXJJZClcclxuICAgICAgLm5lcSgnamlyYV9zdGF0dXMnLCAnRG9uZScpXHJcbiAgICAgIC5vcmRlcignY3JlYXRlZF9hdCcsIHsgYXNjZW5kaW5nOiBmYWxzZSB9KTtcclxuXHJcbiAgICBpZiAoZXJyb3IpIHRocm93IGVycm9yO1xyXG5cclxuICAgIC8vIEdldCB1bmlxdWUgZW50cmllcyBiYXNlZCBvbiBqaXJhX251bWJlclxyXG4gICAgY29uc3QgdW5pcXVlRW50cmllcyA9IGRhdGEucmVkdWNlKChhY2MsIGN1cnJlbnQpID0+IHtcclxuICAgICAgY29uc3QgZXhpc3RzID0gYWNjLmZpbmQoaXRlbSA9PiBpdGVtLmppcmFfbnVtYmVyID09PSBjdXJyZW50LmppcmFfbnVtYmVyKTtcclxuICAgICAgaWYgKCFleGlzdHMpIHtcclxuICAgICAgICBhY2MucHVzaChjdXJyZW50KTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gYWNjO1xyXG4gICAgfSwgW10pO1xyXG5cclxuICAgIHJldHVybiB7IGRhdGE6IHVuaXF1ZUVudHJpZXMsIGVycm9yOiBudWxsIH07XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIHVuaXF1ZSBKSVJBIGVudHJpZXM6JywgZXJyb3IpO1xyXG4gICAgcmV0dXJuIHsgZGF0YTogbnVsbCwgZXJyb3IgfTtcclxuICB9XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgZGVsZXRlSmlyYUVudHJ5ID0gYXN5bmMgKGlkLCB1c2VySWQpID0+IHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgeyBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcclxuICAgICAgLmZyb20oJ2ppcmFfZW50cmllcycpXHJcbiAgICAgIC5kZWxldGUoKVxyXG4gICAgICAuZXEoJ2lkJywgaWQpXHJcbiAgICAgIC5lcSgndXNlcl9pZCcsIHVzZXJJZCk7XHJcblxyXG4gICAgaWYgKGVycm9yKSB0aHJvdyBlcnJvcjtcclxuICAgIHJldHVybiB7IGVycm9yOiBudWxsIH07XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGRlbGV0aW5nIEpJUkEgZW50cnk6JywgZXJyb3IpO1xyXG4gICAgcmV0dXJuIHsgZXJyb3IgfTtcclxuICB9XHJcbn07ICJdLCJuYW1lcyI6WyJzdXBhYmFzZSIsImFkZEppcmFFbnRyeSIsImppcmFOdW1iZXIiLCJqaXJhVGl0bGUiLCJsb2dNZXNzYWdlIiwiamlyYVN0YXR1cyIsInVzZXJJZCIsImRhdGUiLCJkYXRhIiwiZXJyb3IiLCJmcm9tIiwiaW5zZXJ0IiwiamlyYV9udW1iZXIiLCJqaXJhX3RpdGxlIiwibG9nX21lc3NhZ2UiLCJqaXJhX3N0YXR1cyIsInVzZXJfaWQiLCJzZWxlY3QiLCJjb25zb2xlIiwiZ2V0SmlyYUVudHJpZXMiLCJlcSIsIm9yZGVyIiwiYXNjZW5kaW5nIiwiZ2V0VW5pcXVlSmlyYUVudHJpZXMiLCJuZXEiLCJ1bmlxdWVFbnRyaWVzIiwicmVkdWNlIiwiYWNjIiwiY3VycmVudCIsImV4aXN0cyIsImZpbmQiLCJpdGVtIiwicHVzaCIsImRlbGV0ZUppcmFFbnRyeSIsImlkIiwiZGVsZXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/lib/db.js\n"));

/***/ })

});